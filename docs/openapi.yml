openapi: 3.0.3
info:
  title: El Gourmet Veloz
  description: |-
    This is an API designed to handle orders for "El Gourmet Veloz" restaurant
  termsOfService: http://swagger.io/terms/
  contact:
    email: devian369@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
  - url: http://localhost:9001/api
tags:
  - name: orders
    description: Handle incoming orders
paths:
  /v1/orders:
    post:
      tags:
        - orders
      summary: Adds a new order
      operationId: addOrder
      requestBody:
        description: Create a new order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrder'
        required: true
      responses:
        '201':
          description: Order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid input
        '500':
          description: Internal error
    get:
      tags:
        - orders
      summary: Returns list of orders
      operationId: listOrders
      parameters:
        - name: active
          in: query
          description: If you want to return only active orders
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: List ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
  /v1/orders/{id}:
    get:
      tags:
        - orders
      summary: Returns a single order
      parameters:
        - name: id
          in: path
          description: ID of order to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order found
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Order'
                  - properties:
                      status_history:
                        type: array
                        items:
                          properties:
                            status:
                              type: string
                            timestamp:
                              type: string
                              format: date-time
        '400':
          description: Bad order id
        '404':
          description: Order not found
        '500':
          description: Internal error
    put:
      tags:
        - orders
      summary: Updates an order's content
      parameters:
        - name: id
          in: path
          description: ID of order to return
          required: true
          schema:
            type: integer
      requestBody:
        description: Updated order body
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dishes:
                  type: array
                  items:
                    $ref: '#/components/schemas/Dish'
      responses:
        '200':
          description: Order updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid input
        '500':
          description: Internal error

  /v1/orders/{id}/status/{status}:
    put:
      tags:
        - orders
      summary: Updates an order's status
      parameters:
        - name: id
          in: path
          description: ID of order to return
          required: true
          schema:
            type: integer
        - name: status
          in: path
          description: New status of order
          required: true
          schema:
            type: string
            enum:
              - preparing
              - ready
              - done
              - cancelled
      responses:
        '200':
          description: Order updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid parameters
        '404':
          description: Order not found
        '500':
          description: Internal error
components:
  schemas:
    Dish:
      type: object
      properties:
        name:
          type: string
    CreateOrder:
      type: object
      properties:
        source:
          type: string
          enum:
            - delivery
            - in_person
            - phone
        time:
          type: string
          format: date-time
        dishes:
          type: array
          items:
            $ref: '#/components/schemas/Dish'
    Order:
      type: object
      allOf:
        - $ref: '#/components/schemas/CreateOrder'
        - properties:
            id:
              type: integer
              format: int64
              example: 10
            status:
              type: string
              example: pending
              enum:
                - pending
                - preparing
                - ready
                - done
                - cancelled
